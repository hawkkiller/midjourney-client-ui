import 'package:meta/meta.dart';

enum ImageMessageType {
  imagine('imagine'),
  variation('variation'),
  upscale('upscale');

  const ImageMessageType(this.value);

  /// The value of the enum
  final String value;

  static ImageMessageType fromString(String value) => switch (value) {
        'imagine' => imagine,
        'variation' => variation,
        'upscale' => upscale,
        _ => throw ArgumentError.value(value),
      };

  bool get canBeInteracted => switch (this) {
        ImageMessageType.imagine => true,
        ImageMessageType.variation => true,
        ImageMessageType.upscale => false,
      };
  
  @override
  String toString() => value;
}

@immutable
base class ImageMessage {
  const ImageMessage({
    required this.id,
    required this.type,
    required this.messageId,
    required this.progress,
    this.prompt,
    this.uri,
  });

  /// The uri of the generated image
  ///
  /// Updated periodically, when the progress is updated
  final String? uri;

  /// The nonce of the message.
  ///
  /// Generated by the client during the interaction
  final String id;

  /// The id of the message from discord
  ///
  /// It is updated when the message is finished
  final String messageId;

  /// The midjourney prompt
  ///
  /// It could be null if the message is in queue.
  final String? prompt;

  /// The type of the message
  final ImageMessageType type;

  /// The progress of the message
  final int progress;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ImageMessage &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          uri == other.uri &&
          prompt == other.prompt;

  @override
  int get hashCode =>
      Object.hashAll([id, uri, prompt, type, messageId, progress]);
}
